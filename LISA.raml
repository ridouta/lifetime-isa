#%RAML 1.0
---

title: Lifetime ISA
version: 1.0
protocols: [ HTTPS ]
baseUri: http://api.service.hmrc.gov.uk/lifetime-isa

documentation:
  - title: Resource Model
    content: !include documentation/overview.md
  - title: Versioning
    content: !include documentation/versioning.md
  - title: Errors
    content: !include documentation/errors.md

uses:
  sec: resourceTypes/securitySchemes.raml
  annotations: resourceTypes/annotations.raml

mediaType: [ application/json, application/hal+json ]

traits:
  version-1:
    headers:
      Accept:
        description: Accept JSON content at version 1
        type: string
        required: true
        example: application/vnd.hmrc.1.0+json

  json-content:
    headers:
      Content-Type:
        description: Specifies the format of the request body, which must be JSON and at HMRC version 1.
        type: string
        required: true
        example: application/vnd.hmrc.1.0+json

  OAUTH2-secured:
    securedBy: [ sec.oauth_2_0: { scopes: [ "read:lifetime-individual-savings-account" ] } ]

types:
  NINOtype:
#    type: !include schemas/LISAtypes.schema.json#definitions/NINOType
    pattern: "^[A-Z]{2}\\d{6}[A-D]$"
  IDtype:
#    type: !include schemas/LISAtypes.schema.json#definitions/IDType
    pattern: "^\\d{10}$"
#  LISAManager:
#    type: !include schemas/LISAManager.get.schema.json
  LISAManagerReferenceNumberType:
#    type: !include schemas/LISAtypes.schema.json#definitions/LISAManagerReferenceNumberType
    pattern: "^Z\\d{6}$"
  ISO8601-Date:
#    type: !include schemas/LISAtypes.schema.json#definitions/ISO8601-Date
    type : "string"
    pattern: "^\\d{4}-\\d{2}-\\d{2}$"

  errorCodeType:
    type: !include schemas/ErrorCodes.schema.json
#    type: !include schemas/ErrorCodes.schema.json#definitions/error-codeType

  paymentDirectionType:
    enum: [credit, debit]
#    type: !include schemas/HMRCPayment.get.json#definitions/paymentDirectionType

  paymentDirectionType2:
    schema: |
      {
        "type" : "string",
        "enum": ["credit", "debit"]
      }

  paymentStatusType:
    enum: [pending, submitted, completed]

  paymentStatusType2: |
    {
      "type" : "string",
      "enum": ["pending", "submitted", "completed"]
    }
#    type: !include schemas/HMRCPayment.get.json#definitions/paymentStatusType

  paymentMethodType:
    enum : [directDebit, BACS]

  paymentMethodType2: |
    {
      "type" : "string",
      "enum": ["directDebit", "BACS"]
    }
#    type: !include schemas/HMRCPayment.get.json#definitions/paymentMethodType

#  hmrcTransactionType: {"type" : "string","enum": ["bonus", "charge"]}
  hmrcTransactionType :
    enum: [bonus, charge]

  lisaTransactionType :
    enum: [deposit, withdrawal, HTBtransfer, LISAtransfer, bonusClaim, chargeMade]

  lisaTransactionType2: |
    {
      "type" : "string",
      "enum": ["deposit", "withdrawal", "HTBtransfer", "LISAtransfer",
            "bonusClaim", "chargeMade"]
    }
#    type: !include schemas/LISATransaction.get.schema.json#definitions/lisaTransactionTypeType

/manager:
  description: This resource models the existence of a registered LISA Manager organisation.
    It is created by HMRC as a result of a LISA registration.  The registration process is not
    part of the API specification as it is a forms based process with manual verification by HMRC staff.

  /{lisaManagerReferenceNumber}:
    uriParameters:
      lisaManagerReferenceNumber:
        type : LISAManagerReferenceNumberType
        description: The number issued to the LISA provider upon successful LISA registration with HMRC
        example: "Z123456"
    get:
      is: [version-1, json-content, OAUTH2-secured]
      description: The HTTP GET call fetches a resource that is the primary entry point for the LISA API.
        It provides a set of links that allow the API developer to discover the URI endpoints
        for access to other resources defined in this specification.
      displayName: GET a LISAManager resource by lisaManagerReferenceNumber
      (annotations.scope): "read:lifetime-individual-savings-account"
      responses:
        200:
          body:
            application/json:
              type: !include schemas/LISAManager.get.schema.json
              example: !include examples/LISAManager.get.json
        403:
          description: The LISAManager resource requested is not the calling Lisa Manager
            therefore access has been declined
        404:
          description: The LISAManager resource specified by the supplied
            lisaManagerReferenceNumber has not been found.


    /accounts:
      description: !include documentation/LISAAccount
      post:
        is: [version-1, json-content, OAUTH2-secured]
        description: Create a new account
        displayName: POST a LISAAccount to create the resource
        (annotations.scope): "write:lifetime-individual-savings-account"
        body:
          application/json:
            type: !include schemas/LISAAccount.put.schema.json
            example: !include examples/LISAAccount.put.json
        responses:
          201:
            headers:
              Location:
                description: URI to the created LISAAccount resource
                type: string
          403:
            body:
              application/json:
                type: errorCodeType
                examples:
                  notOpenStatus: |
                    {
                      "code" : "not-open-status",
                      "message" : "invalid status: must create with open status"
                    }
                  InvestorNotFound: |
                    {
                      "code" : "investor-not-found",
                      "message" : "invalid status: must create with open status"
                    }
                  wrongLISAManager: |
                    {
                      "code" : "wrong-lisa-manager",
                      "message" : "the lisaManagerReferenceNumber in URI does match match the calling LISAManager"
                    }
                  outsideAgeRange: |
                    {
                      "code" : "compliance-account-open-outside-age-range",
                      "message" : "Can't open a LISA if investor is older than 40 or younger than 18"
                    }
          409:
            description: The LISAAccount already exists
      /{accountID}:
        uriParameters:
          accountID:
            type: IDtype
            description: The ID for the account.  This will be generated by the LISAManager and will only
              be unique when used in combination with lisaManagerReferenceNumber
            example: "1234567890"
        get:
          is: [version-1, json-content, OAUTH2-secured]
          description: Get a single LISAAccount resource using the unique
            combination of lisaManagerReferenceNumber and accountID.  Returns a
            JSON object in the response body.  An example is shown below, as is
            a JSON schema describing the JSON object.
          displayName: GET a single LISAAccount resource using lisaManagerReferenceNumber and accountID.
          (annotations.scope): "read:lifetime-individual-savings-account"

          responses:
            200:
              body:
                application/json:
                  example: !include examples/LISAAccount.get.json
                  type: !include schemas/LISAAccount.get.schema.json
            403:
              body:
                application/json:
                  type: errorCodeType
                  examples:
                    wrongLISAManager: |
                      {
                        "code" : "wrong-lisa-manager",
                        "message" : "the lisaManagerReferenceNumber in URI does match match the calling LISAManager"
                      }
            404:
              description: The LISAAccount identified by the accountID does not exist
        put:
          is: [version-1, json-content, OAUTH2-secured]
          description: To update an existing LISAAccount to change status and set closeDate.
          displayName: PUT to update an existing LISAAccount to change status and set closeDate
          (annotations.scope): "write:lifetime-individual-savings-account"
          body:
            application/json:
              type: !include schemas/LISAAccount.put.schema.json
              example: !include examples/LISAAccount.put.json
          responses:
            200:
              description: The account is updated successfully.
            403:
              body:
                application/json:
                  type: errorCodeType
                  examples:
                    wrongLISAManager: |
                      {
                        "code" : "wrong-lisa-manager",
                        "message" : "the lisaManagerReferenceNumber in URI does match match the calling LISAManager"
                      }
                    cantChangeAccountID: |
                      {
                        "code" : "cant-change-accountID",
                        "message" : "You cannot change the accountID for an existing account"
                      }
                    cantChangeInvestor: |
                      {
                        "code" : "cant-change-investor",
                        "message" : "You cannot change the investorID for an existing account"
                      }
                    invalidStatusChange: |
                      {
                        "code" : "invalid-status-change",
                        "message" : "You cannot change the status to the requested value"
                      }
            404:
              description: The LISAAccount identified by the accountID does not exist


        /transactions:
          description: !include documentation/LISATransaction
          get:
            is: [version-1, json-content, OAUTH2-secured]
            displayName: GET an array of LISATransaction using query parameters
              on date range and optionally transactionType
            description: Returns a collection of LISATransaction resources for
              the specified account as a JSON array.  The array will be empty
              if none are found.  The request and response must support pagination.
            (annotations.scope): "read:lifetime-individual-savings-account"
            queryParameters:
              startDate:
                description:  first date from which to search for HMRCTransactions
                type: ISO8601-Date
                required: true
                example: "2017-10-06"
              endDate:
                description:  last date from which to search for HMRCTransactions
                type: ISO8601-Date
                required: true
                example: "2017-11-05"
              transactionType:
                description:  optional parameter - search for HMRCTransactions including transactions
                  with the specified transactiomType
                type: lisaTransactionType
#                required: false
                example: LISAtransfer
            responses:
              200:
                body:
                  application/json:
                    type: !include schemas/LISATransaction.get.schema.array.json
                    example: !include examples/LISATransaction.get.array.json

              403:
                description: Access Denied.
                body:
                  application/json:
                    type: errorCodeType
                    example:
                      {
                        "code" : "wrong-lisa-manager",
                        "message" : "The LISAAccount specified by the
                          accountID or the lisaManagerReferenceNumber in the URL does
                          not belong to the calling LISAManager"
                      }
              404:
                description: the lisaManagerReferenceNumber or accountID fail to
                  locate to their respective resources.
                  Namely LISAManager and LISAAccount.


          post:
            is: [version-1, json-content, OAUTH2-secured]
            description: Create a LISATransaction resource.  This endpoint
              does not support updating a LISATransaction. To correct a LISA
              transaction, it is necessary to create a superseding transaction.
            displayName: POST to create a LISATransaction resource.
            (annotations.scope): "write:lifetime-individual-savings-account"
            body:
              application/json:
                type: !include schemas/LISATransaction.post.schema.json
                example: !include examples/LISATransaction.post.json
            responses:
              201:
                description: The LISATransaction resource has been created.
                headers:
                  Location:
                    description: relative URI to the created LISATransaction resource
                    type: string
                    example: /manager/Z876543210/accounts/1234567890/transactions/3333333333
              403:
                description: matches already existing resource.
                  Response contains a location header with link to the existing resource.
                body:
                  application/json:
                    type: errorCodeType
                    examples:
                      notOpenStatus: |
                        {
                          "code" : "wrong-lisa-manager",
                          "message" : "The LISAManager or the LISAAccount do not belong to the calling LISAManager"
                        }
                      complianceChargeWrong: |
                        {
                          "code" : "compliance-charge-wrong",
                          "message" : "Charge Made disagrees with HMRC records"
                        }
                      complianceBonusWrong: |
                        {
                          "code" : "compliance-bonus-wrong",
                          "message" : "Bonus claim disagrees with HMRC records"
                        }
                      complianceTooManySubcriptions: |
                        {
                          "code" : "compliance-too-many-subscriptions-in-FP",
                          "message" : "The Investor is trying to start a second LISA subscription in the financial period"
                        }
                      complianceTooMuchLISAFunds: |
                        {
                          "code" : "compliance-too-much-LISA-funds-credited",
                          "message" : "The Investor is trying to credit more funds than the current limit LISA subscription in the financial period"
                        }
                      complianceTooMuchISAFunds: |
                        {
                          "code" : "compliance-too-much-ISA-funds-credited",
                          "message" : "The Investor is trying to credit more funds than the current limit ISA subscription in the financial period"
                        }
                      complianceAgeRangeForCredit: |
                        {
                          "code" : "compliance-funds-credit-outside-age-range",
                          "message" : "The Investor is trying to cedit funds to a LISA when outside the compliant age range. Transfers for a LISA do not count as Credits"
                        }

              409:
                description: Conflict. The LISATransaction resource already exists.
                  Updating of LISATransaction resources is not supported.


          /{lisaTransactionID}:
            uriParameters:
              lisaTransactionID:
                type: IDtype
                description: The ID for the account.  This will be generated by the LISAManager and will only
                  be unique when
                example: "1234567890"
            get:
              is: [version-1, json-content, OAUTH2-secured]
              displayName: GET a LISATransaction resource by its lisaTransactionID
              description: Request a single LISATransaction resource as a JSON object
                identified by its lisaTransactionID
              (annotations.scope): "read:lifetime-individual-savings-account"
              responses:
                200:
                  body:
                    application/json:
                      type: !include schemas/LISATransaction.get.schema.json
                      example: !include examples/LISATransaction.get.json
                403:
                  description: Access Denied.  The LISAAccount specified by the
                    accountID in the URL or the lisaManagerReferenceNumber is do
                    not belong to the calling LISAManager
                404:
                  description: Not found


    /payments:
      get:
        is: [version-1, json-content, OAUTH2-secured]
        displayName: GET HMRC Payment using query parameters on date range and optionally direction, method and status
        description: !include documentation/HMRCPayment
        (annotations.scope): "read:lifetime-individual-savings-account"
        queryParameters:
          startDate:
            description:  first date from which to search for HMRCPayments
            type: ISO8601-Date
            required: true
            example: "2017-10-06"
          endDate:
            description:  last date from which to search for HMRCPayments
            type: ISO8601-Date
            required: true
            example: "2017-11-05"
          direction:
            description: optional -  search for HMRCPayments including payments with the specified payment Direction
            type: paymentDirectionType
            required: false
            example:
              value: credit
          status:
            description: optional - search for HMRCPayments including payments with the specified payment status
            type: paymentStatusType
            required: false
            example:
              value: pending
          method:
            description: optional - search for HMRCPayments including payments with the specified payment method
            type: paymentMethodType
            required: false
            example:
              value: BACS
        responses:
          200:
            description: OK - Returns a JSON array of HMRCPayment resources in the response body.
            body:
              application/json:
                type: !include schemas/HMRCPayment.get.array.json
                example: !include examples/HMRCPayment.get.array.json
          403:
            description: access denied – If attempting to access a payment not belonging to the calling LISAManager


      /{paymentReference}:
        uriParameters:
          paymentReference:
            type: IDtype
            description: identify the exact payment by a unique payment reference
            example: "1111111111"
        get:
          is: [version-1, json-content, OAUTH2-secured]
          displayName: GET an HMRCPayment resource using paymentReference as a unique key
          description: Fetch a JSON HMRCPayment resource selected by paymentReference
          (annotations.scope): "read:lifetime-individual-savings-account"
          responses:
            200:
              description: OK - Returns a JSON array of HMRCPayment resources in the response body.
              body:
                application/json:
                  type: !include schemas/HMRCPayment.get.json
                  example: !include examples/HMRCPayment.get.json
            403:
              description: access denied – If attempting to access a payment not
                belonging to the calling LISAManager
            404:
              description: HMRC Payment not found for specified paymentReference

        /hmrc-transactions:
          description: !include documentation/HMRCTransaction
          get:
            is: [version-1, json-content, OAUTH2-secured]
            displayName: Get an array of HMRCTransaction using optional
              query parameters on date range
            description: Fetch a JSON array of HMRCTransaction resources either
              fetching all HMRCTRansactions for the paymentReference or selected by
              a date range search from the startDate to the endDate supplied as
              HTML query parameters.
            (annotations.scope): "read:lifetime-individual-savings-account"

            queryParameters:
              startDate:
                description:  first date from which to search for HMRCTransaction
                type: ISO8601-Date
                #        required: true
                example: "2017-10-06"
              endDate:
                description:  last date from which to search for HMRCTransaction
                type: ISO8601-Date
                #required: true
                example: "2017-11-05"
            responses:
              200:
                description: OK - Returns a JSON array of HMRCTransaction resources in the response body.
                body:
                  application/json:
                    type: !include schemas/HMRCTransaction.get.array.json
                    example: !include examples/HMRCTransaction.get.array.json

              403:
                description: access denied – If attempting to access a payment not belonging to the calling LISAManager
              404:
                description: Returned if the LISAManager cannot be found or the HMRCPayment cannot be founnd.
                  Finding zero HMRCPayment objects will result in a 200 response code and an empty JSON array response body

          /{hmrcTransactionID}:
            uriParameters:
              hmrcTransactionID:
                type: IDtype
                description: identify the exact HMRCTransaction by a unique HMRCTransactionID
                example: "1111111111"
            get:
              is: [version-1, json-content, OAUTH2-secured]
              description: Request an individual HMRCTransaction resource for a specified HMRCTransactionID
              displayName: GET an HMRCTransaction resource by HMRCTransactionID
              (annotations.scope): "read:lifetime-individual-savings-account"

              responses:
                200:
                  description: A single HMRCTransaction resource is returned in the response body.
                  body:
                    application/json:
                      type: !include schemas/HMRCTransaction.get.json
                      example: !include examples/HMRCTransaction.get.json

                403:
                  description: access denied – if the HMRCTransaction is not for the calling LISAManager
                  body:
                    application/json:
                      type: errorCodeType
                      examples:
                        notOpenStatus:
                          {
                            "code" : "wrong-lisa-manager",
                            "message" : "The Investor resource already exists.
                              The HMRCTransaction does not belong to the calling LISAManager."
                          }

                404:
                  description: not found – if the requested LISATransaction resource does not exist


/investors:
  get:
    is: [version-1, json-content, OAUTH2-secured]
    displayName: GET a LISA investor using full matching
    description: !include documentation/LISAInvestor
    (annotations.scope): "read:lifetime-individual-savings-account"

    queryParameters:
      NINO:
        description:  NINO for the Investor
        type: NINOtype
        required: true
        example: "AB123456D"
      firstname:
        description:  first name of the Investor
        type: string
        required: true
        example: "John"
      lastname:
        description:  last name of the Investor
        type: string
        required: true
        example: "Doe"
      DoB:
        description: Date of birth of the Investor
        type: ISO8601-Date
        required: true
        example: "2017-10-23"
    responses:
      200:
        body:
          application/json:
            type: !include schemas/LISAManager.get.schema.json
      404:
        description: An investor has not been found that matches the 4 search parameters

  post:
    is: [version-1, json-content, OAUTH2-secured]
    displayName: POST to create new LISA Investor that has not already been created
    description: !include documentation/LISAInvestor.post
    (annotations.scope): "write:lifetime-individual-savings-account"
    body:
      application/json:
        example: !include examples/LISAInvestor.post.json
        type: !include schemas/LISAInvestor.post.schema.json
    responses:
      201:
        description: The LISA investor resource has been created.
        headers:
          Location:
            description: relative URI to the created LISAAccount resource
            type: string
            example: /investors/0987654321
      403:
        description: Access Denied.  Used when the match verification fails.
      409:
        description: matches already existing resource.
          Response contains a location header with link to the existing resource.
        body:
          application/json:
            type: errorCodeType
            examples:
              notOpenStatus:
                {
                  "code" : "investor-already-created",
                  "message" : "The Investor resource already exists.
                    Use the full matching form of GET to access the resource and discover the investorID."
                }

  /{investorID}:
    uriParameters:
      investorID: IDtype
    get:
      is: [version-1, json-content, OAUTH2-secured]
      description: This is the primary access mechanism for an already known
        investor with an existing LISAInvestor resource in existence.
      displayName: GET an existing LISAInvestor resource associated with calling LISAManager
      (annotations.scope): "read:lifetime-individual-savings-account"

      body:
      responses:
        200:
          body:
            application/json:
              type: !include schemas/LISAInvestor.get.schema.json
              example: !include examples/LISAInvestor.get.json
        403:
          description: if LISAInvestor exists but does not have accounts
            belonging to the accessing LISAManager.  This error message supplied
            in the body of the response.
          body:
            application/json:
              type: errorCodeType
              examples:
                noAccountWithManager:
                  {
                    "code" : "no-acccount-with-manager",
                    "message" : "the investor does not have an account with the calling LISAManager"
                  }
        404:
          description: The Investor with the specified investorID has not been found
